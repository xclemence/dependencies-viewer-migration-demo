# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master
- features/*

pool:
  vmImage: 'vs2017-win2016'

variables:
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Run Unit-Tests'
  inputs:
   command: test
   projects: '**/*test/*.csproj'
   arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

- script: choco install docfx
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: Install DocFX

- script: docfx metadata
  displayName: Build Documentation Meta-Data
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  workingDirectory: '$(Build.SourcesDirectory)/docfx'

- script: docfx build
  displayName: Build Documentation
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  workingDirectory: '$(Build.SourcesDirectory)/docfx'

- task: PowerShell@2
  displayName: Update Documentation (gh-branch)
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    targetType: filePath
    failOnStderr: false
    filePath: .\update-gh-pages.ps1
    arguments: $(token.github.penet.gh-pages)

- task: DotNetCoreCLI@2
  displayName: 'Pack Nuget Package'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    command: 'pack'
    packagesToPack: '**\src\**\*.csproj'
    configuration: $(buildConfiguration)

- task: NuGetCommand@2
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    command: push
    nuGetFeedType: external
    allowPackageConflicts: true
    publishFeedCredentials: 'Nuget.org'
    packagesToPush: '$(build.artifactStagingDirectory)/*.nupkg'
